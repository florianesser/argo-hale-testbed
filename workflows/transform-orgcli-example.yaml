# Workflow that uses the original hale CLI for a transformation
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: transform-
  annotations:
    workflows.argoproj.io/description: |
      Transformation example using the original hale-cli.
spec:
  entrypoint: transform
  templates:
  - name: transform
    steps:
      - - name: transform
          template: hc-transformer
          arguments: {}
  - name: hc-transformer
    outputs:
      artifacts:
        - name: result
          path: /tmp/target.gml
        - name: reports
          path: /tmp/reports.log
        - name: stats
          path: /tmp/stats.json
    container:
      name: 'transformer'
      image: docker.io/wetransform/hale-cli:latest
      env:
        - name: HALE_OPTS
          value: -Dlog.hale.level=INFO -Dlog.root.level=WARN -Xmx5120m
      # Entrypoint is CLI # command:
      args:
        # Transformation arguments see http://help.halestudio.org/latest/topic/eu.esdihumboldt.hale.doc.user/html/tasks/transform_cli.html?cp=0_6_6
        - transform
        - -project
        - http://static-projects.default.svc.cluster.local/hydro-example.halez
        - -source
        - http://static-sources.default.svc.cluster.local/hydro-example.gml
        - -target
        - /tmp/target.gml
        - -preset
        - default
        - -reportsOut
        - /tmp/reports.log
        - -stacktrace
        - -statisticsOut
        - /tmp/stats.json
      resources:
        limits:
          cpu: 1024m
          memory: 5Gi
    # retryStrategy:
    #   limit: '2'
    #   backoff:
    #     duration: '30'
    #     factor: '6'
  # - name: exit-handler
  #   inputs: {}
  #   outputs: {}
  #   metadata: {}
  #   steps:
  #     - - name: notify-error
  #         template: notify-error
  #         arguments: {}
  #         when: '{{workflow.status}} != Succeeded'
  # - name: notify-error
  #   inputs: {}
  #   outputs: {}
  #   metadata: {}
  #   script:
  #     name: ''
  #     image: wetransform/curl
  #     command:
  #       - bash
  #     resources: {}
  #     source: |-
  #       set -e
  #       curl -sSf ...
  #   retryStrategy:
  #     limit: '4'
  #     backoff:
  #       duration: '30'
  #       factor: '3'
  #       maxDuration: 4m
